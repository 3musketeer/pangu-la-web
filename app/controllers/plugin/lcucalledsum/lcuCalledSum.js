var mongoose = require('mongoose')   ,logger = require('../../log').logger   ,barCfg = require('../../plugin_config/lcucalledsum/config_column').config   ,barList = require('../../plugin_config/lcucalledsum/config_column').list   ,extend = require('extend')   ,query = require('../../query')   ,transcode_list = require('../../config_coreTranscodeList').coreTranscodeList;var formatNum = function(num) {	if (num > 1000000) return (num/1000000).toFixed(1)+'M';	if (num > 1000) return (num/1000).toFixed(1)+'k';	return num}var accumulate = function(data) {	for(var key in data) {		scope = data[key].scopes[0]		list = data[key][scope]		if (list.error) continue;		count = 0;		for(var i in list) {			count += list[i]._count		}		data[key]._count = formatNum(count)		data[key].count = count	}}exports.plugin = function(server) {              server.get('/lcuCalledSum.html', function(req, res) {                 var chartList = req.query.chartList;        var value = req.query.value||'';        var chart_list = barList[chartList];         var ajaxGetTag = req.query.ajaxGetTag||'false';        var transCode =req.query.TRANSCODE||'';                        var tempConfig ={};	        extend(true,tempConfig,barCfg);        var list = [];        extend(true,list,chart_list);                 list.forEach(function(item){             if(!item.value)                item.value = value;                             var filter ={};              if(tempConfig[item.mode+item.type+item.subtype].filter)                filter = tempConfig[item.mode+item.type+item.subtype].filter;             tempConfig[item.mode+item.type+item.subtype].filterColNames.forEach(function(col){                    var obj = {};                 filter[col] = new RegExp(req.query[col]||'');               });                          tempConfig[item.mode+item.type+item.subtype].filter = filter;               tempConfig[item.mode+item.type+item.subtype].caculateDate = value;               logger.debug("tempConfig.filter=%s",JSON.stringify(tempConfig[item.mode+item.type+item.subtype].filter));             logger.debug("item.value=%s",item.value);        });                         query.multiQuery(list, tempConfig, function(err, docs) {            accumulate(docs)            logger.debug("docs=%s",JSON.stringify(docs));            if(ajaxGetTag == 'false'){                res.renderPjax('plugin/lcucalledsum/lcuCalledSum',{                    all: docs,                    caculateDate:value,                    transcode_list:transcode_list,                    chartList:chartList                })            }else{                res.send(docs);            }        })        })        }