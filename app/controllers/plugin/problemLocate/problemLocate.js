var mongoose = require('mongoose')   ,logger = require('../../log').logger   ,configZhiBiaoList = require('../../plugin_config/problemLocate/config_zhibiao_list').configZhiBiaoList   ,config = require('../../plugin_config/problemLocate/config_showTarget').graphConfig   ,chart_list = require('../../plugin_config/problemLocate/config_showTarget').graphList   ,extend = require('extend')   ,query = require('../../query');exports.plugin = function(server) {        //输入ip    server.get('/inputIp.html', function(req, res) {         var stepId = req.query.stepId||''        var stepAllData = req.query.stepAllData||'{}'        res.render('plugin/problemlocate/inputIp',{            layout: false,            stepAllData: stepAllData        });     });                        //选择指标    server.get('/selectTarget.html', function(req, res) {         var stepId = req.query.stepId||''        var stepAllData = req.query.stepAllData||'{}'        res.render('plugin/problemlocate/selectTarget',{            layout: false,            stepAllData: stepAllData,            configZhiBiaoList:configZhiBiaoList           });     });            //展现指标页面    server.get('/showTarget.html', function(req, res) {        try        {             var stepId = req.query.stepId||''            var stepAllData = req.query.stepAllData||'{}'            logger.debug("stepAllData=%s",stepAllData);            var tempObj = JSON.parse(stepAllData);            if(!tempObj.IP || !tempObj.targetValue)                throw new Error('此节点前面节点传入的参数，请检查前面节点是否正确返回！');                            res.render('plugin/problemlocate/showTarget/'+tempObj.targetValue,{                layout: false,                stepAllData: stepAllData,                hostIP:tempObj.IP,                targetValue:tempObj.targetValue            });          }catch(error)         {             ContentType = "text/plain";             res.StatusCode =500;             res.write("<font color='red'>"+ error.message+" </font>");             res.end();         }    });            //展现指标数据页面    server.get('/updateTargetData', function(req, res) {        var value = req.query.value||'2014-02-18'           ,targetValue = req.query.targetValue;                var now = new Date().getTime();                    var tempConfig ={};	        extend(true,tempConfig,config);                var list = [];                     var tempList = chart_list[targetValue];          extend(true,list,tempList);                  list.forEach(function(item){             if(!item.value)                item.value = value;                             var filter ={};              if(tempConfig[item.mode+item.type+item.subtype].filter)                filter = tempConfig[item.mode+item.type+item.subtype].filter;             tempConfig[item.mode+item.type+item.subtype].filterColNames.forEach(function(col){                  if (col == "timestamp"){                       var obj = {};                     filter[col] = {$gte: now-tempConfig[item.mode+item.type+item.subtype].delayTime,$lte: now+1000};                    }else{                      var obj = {};                     if(req.query[col]||'' != '')                        filter[col] = new RegExp(req.query[col]);                 }                 });             tempConfig[item.mode+item.type+item.subtype].filter = filter;                       });                query.multiQuery(list, tempConfig, function(err, docs) {            logger.debug("docs=%s",JSON.stringify(docs));            res.send(docs);        })                   });}